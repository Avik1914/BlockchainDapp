{"ast":null,"code":"import _toConsumableArray from \"/Users/aviks_mac/Documents/NewBlockChain/Ethereum-Homes/Real Estate Dapp (React)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/aviks_mac/Documents/NewBlockChain/Ethereum-Homes/Real Estate Dapp (React)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/aviks_mac/Documents/NewBlockChain/Ethereum-Homes/Real Estate Dapp (React)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/aviks_mac/Documents/NewBlockChain/Ethereum-Homes/Real Estate Dapp (React)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/aviks_mac/Documents/NewBlockChain/Ethereum-Homes/Real Estate Dapp (React)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/aviks_mac/Documents/NewBlockChain/Ethereum-Homes/Real Estate Dapp (React)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/aviks_mac/Documents/NewBlockChain/Ethereum-Homes/Real Estate Dapp (React)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/aviks_mac/Documents/NewBlockChain/Ethereum-Homes/Real Estate Dapp (React)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/aviks_mac/Documents/NewBlockChain/Ethereum-Homes/Real Estate Dapp (React)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/aviks_mac/Documents/NewBlockChain/Ethereum-Homes/Real Estate Dapp (React)/src/components/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Web3 from 'web3';\nimport LandContract from '../abis/LandContract.json';\nimport Navbar from './Navbar';\nimport Content from './Content';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('Non-ethereum browser detected');\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }() // .call() to get blockchain data\n    // .send() to set transaction\n\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var web3, accounts, account, networkId, networkData, landContract, landCount, i, land;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3;\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context3.sent;\n                account = accounts[0];\n                this.setState({\n                  account: account\n                });\n                console.log(this.state.loading); // Load contract\n\n                _context3.next = 9;\n                return web3.eth.net.getId();\n\n              case 9:\n                networkId = _context3.sent;\n                networkData = LandContract.networks[networkId];\n\n                if (!networkData) {\n                  _context3.next = 32;\n                  break;\n                }\n\n                landContract = web3.eth.Contract(LandContract.abi, networkData.address);\n                this.setState({\n                  landContract: landContract\n                });\n                _context3.next = 16;\n                return landContract.methods.landCount().call();\n\n              case 16:\n                landCount = _context3.sent;\n                this.setState({\n                  landCount: landCount\n                });\n                console.log(this.state.landCount); // Load Products\n\n                i = 1;\n\n              case 20:\n                if (!(i <= landCount)) {\n                  _context3.next = 28;\n                  break;\n                }\n\n                _context3.next = 23;\n                return landContract.methods.lands(i).call();\n\n              case 23:\n                land = _context3.sent;\n                this.setState({\n                  lands: [].concat(_toConsumableArray(this.state.lands), [land])\n                });\n\n              case 25:\n                i++;\n                _context3.next = 20;\n                break;\n\n              case 28:\n                this.setState({\n                  loading: false\n                });\n                console.log(this.state.lands);\n                _context3.next = 33;\n                break;\n\n              case 32:\n                window.alert('LandContract not deployed to connected network');\n\n              case 33:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.addLand = function (location, value) {\n      _this.setState({\n        loading: true\n      });\n\n      console.log(\"Dhuka \");\n\n      _this.state.landContract.methods.addLand(location, value).send({\n        from: _this.state.account\n      }).once('receipt', function (receipt) {\n        console.log(\"Avik \" + receipt);\n\n        _this.setState({\n          loading: false\n        });\n      });\n    };\n\n    _this.buyLand = function (id, value) {\n      _this.setState({\n        loading: true\n      });\n\n      _this.state.landContract.methods.buyLand(id).send({\n        from: _this.state.account,\n        value: value\n      }).once('receipt', function (receipt) {\n        _this.setState({\n          loading: false\n        });\n      });\n    };\n\n    _this.listLand = function (id, value) {\n      _this.setState({\n        loading: true\n      });\n\n      _this.state.landContract.methods.listLand(id, value).send({\n        from: _this.state.account\n      }).once('receipt', function (receipt) {\n        _this.setState({\n          loading: false\n        });\n      });\n    };\n\n    _this.state = {\n      account: '',\n      landCount: '',\n      lands: [],\n      loading: true\n    };\n    _this.addLand = _this.addLand.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.buyLand = _this.buyLand.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.listLand = _this.listLand.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"app-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Navbar, {\n        account: this.state.account,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container-fluid mt-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class1: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 flex\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }\n      }, this.state.loading ? /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }\n      }, \"Loading...\") : /*#__PURE__*/React.createElement(Content, {\n        lands: this.state.lands,\n        addLand: this.addLand,\n        buyLand: this.buyLand,\n        listLand: this.listLand,\n        account: this.state.account,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }\n      })))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/aviks_mac/Documents/NewBlockChain/Ethereum-Homes/Real Estate Dapp (React)/src/components/App.js"],"names":["React","Component","Web3","LandContract","Navbar","Content","App","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","accounts","account","setState","console","log","state","loading","net","getId","networkId","networkData","networks","landContract","Contract","abi","address","methods","landCount","call","i","lands","land","props","addLand","location","value","send","from","once","receipt","buyLand","id","listLand","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Web3 from 'web3';\nimport LandContract from '../abis/LandContract.json';\nimport Navbar from './Navbar';\nimport Content from './Content';\n\nclass App extends Component {\n\n  async componentWillMount() {\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n  }\n\n  async loadWeb3() {\n    if(window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable()\n    }\n    else if(window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    }\n    else {\n      window.alert('Non-ethereum browser detected')\n    }\n  }\n\n  // .call() to get blockchain data\n  // .send() to set transaction\n  async loadBlockchainData() {\n    const web3 = window.web3\n    const accounts = await web3.eth.getAccounts()\n    const account = accounts[0]\n    this.setState({ account })\n    console.log(this.state.loading)\n    // Load contract\n    const networkId = await web3.eth.net.getId()\n    const networkData = LandContract.networks[networkId]\n   \n    if(networkData) {\n      const landContract = web3.eth.Contract(LandContract.abi, networkData.address)\n      this.setState({ landContract })\n      const landCount = await landContract.methods.landCount().call()\n      this.setState({ landCount })\n      console.log(this.state.landCount)\n      // Load Products\n      for(var i = 1; i <= landCount; i++) {\n        const land = await landContract.methods.lands(i).call()\n        this.setState({\n          lands: [...this.state.lands, land]\n        })\n      }\n      this.setState({ loading: false })\n      console.log(this.state.lands)\n    } else {\n      window.alert('LandContract not deployed to connected network');\n    }\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      account: '',\n      landCount: '',\n      lands: [],\n      loading: true\n    }\n\n    this.addLand = this.addLand.bind(this)\n    this.buyLand = this.buyLand.bind(this)\n    this.listLand = this.listLand.bind(this)\n  }\n\n  addLand = (location, value) => {\n    this.setState({ loading: true })\n    console.log(\"Dhuka \")\n      this.state.landContract.methods.addLand(location, value).send({ from: this.state.account })\n      .once('receipt', (receipt) => {\n        console.log(\"Avik \"+receipt)\n        this.setState({ loading: false })\n      })\n  }\n\n  buyLand = (id, value) => {\n    this.setState({ loading: true })\n      this.state.landContract.methods.buyLand(id).send({ from: this.state.account, value: value })\n      .once('receipt', (receipt) => {\n        this.setState({ loading: false })\n      })\n  }\n\n  listLand = (id, value) => {\n    this.setState({ loading: true })\n      this.state.landContract.methods.listLand(id, value).send({ from: this.state.account })\n      .once('receipt', (receipt) => {\n        this.setState({ loading: false })\n      })\n  }\n\n  render() {\n    return (\n      <div className='app-container'>\n        <Navbar account={this.state.account} />\n        <div className='container-fluid mt-5'>\n          <div class1='row'>\n            <main role='main' className='col-lg-12 flex'>\n            { \n              this.state.loading ? \n                <p>Loading...</p> :\n                <Content \n                  lands={this.state.lands} \n                  addLand={this.addLand} \n                  buyLand={this.buyLand}\n                  listLand={this.listLand}\n                  account={this.state.account}\n                /> \n            }\n            </main>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}